import math
import numpy as np
import scipy
import scipy.integrate
import matplotlib.pyplot as plt
from prettytable import PrettyTable



f = lambda x: (np.sin(x))**2.0
x = np.arange(0,4*np.pi,.01)
y = (np.sin(x))**2

plt.plot(x,y, 'o-')
plt.title ('$sin^2x$')
plt.xlabel ('x')
plt.ylabel ('$sin^2x$')
plt.show()


def romberg(f, a, b):
    h = float(b - a)
    R = 0.0

    for i in range(1,10):
        n = 2**i
        R00 = (1.0/2.0)*h*(f(a) + f(b))
        
        R01 = 0.5*R00 + (1.0/2.0)*h*(f(a+h*1.0/2.0))
        R11 = (4.0*R01-R00)/3.0
        ep1 = abs(R11 - R00)

        R02 = 0.5*R01 + (1.0/(2.0**2.0))*h*(f(a+h*1.0/(2.0**2.0)) + + f(a+h*3.0*(1.0/(2.0**2.0))))
        R12 = (4.0*R02-R01)/3.0
        R22 = ((4.0**2.0)*R12-R11)/((4.0**2.0) - 1.0)
        ep2 = abs(R22 - R11)

        R03 = 0.5*R02 + (1.0/(2.0**3.0))*h*(f(a+h*1.0/(2.0**3.0)) + + f(a+h*3.0*(1.0/(2.0**3.0))) + f(a+h*5.0*(1.0/(2.0**3.0)))+f(a+h*7.0*(1.0/(2.0**3.0))))
        R13 = (4.0*R03-R02)/(3.0)
        R23 = ((4.0**2.0)*R13-R12)/((4.0**2.0) - 1.0)
        R33 = ((4.0**3.0)*R23-R22)/((4.0**3.0) - 1.0)
        ep3 = abs(R33 - R22)

        R04 = 0.5*R03 + (1.0/(2.0**4.0))*h*  (  f(a+h*1.0/(2.0**4.0)) + f(a+h*3.0*(1.0/(2.0**4.0))) + f(a+h*5.0*(1.0/(2.0**4.0)))+f(a+h*7.0*(1.0/(2.0**4.0)))+f(a+h*9.0*(1.0/(2.0**4.0)))+f(a+h*11.0*(1.0/(2.0**4.0)))+f(a+h*13.0*(1.0/(2.0**4.0)))+f(a+h*15.0*(1.0/(2.0**4.0))))
        R14 = (4.0*R04-R03)/(3.0)
        R24 = ((4.0**2.0)*R14-R13)/((4.0**2.0) - 1.0)
        R34 = ((4.0**3.0)*R24-R23)/((4.0**3.0) - 1.0)
        R44 = ((4.0**4.0)*R34-R33)/((4.0**4.0) - 1.0)
        ep4 = abs(R44 - R33)
        

    return [[R00],[R01,R11,ep1],[R02,R12,R22,ep2],[R03,R13,R23,R33,ep3],[R04,R14,R24,R34,R44,ep4]]


print(romberg(f, 0.0, 4.0*(np.pi)))


f = lambda x: (np.sin(x))**2.0
print(romberg(f, 0.0, (np.pi)))







